name: Build & Deploy Backend to Cloud Run

on:
  push:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.CLOUD_RUN_REGION }}
  SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}         # e.g. australia-southeast1
  GAR_REPO: ${{ secrets.GAR_REPO }}                 # e.g. installer-repo
  IMAGE_BASE: ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPO }}/${{ secrets.CLOUD_RUN_SERVICE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: gh-actions-deployer@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev --quiet

      # Quick visibility on what the runner sees
      - name: List backend contents
        run: |
          pwd
          ls -la
          echo "----- backend/ -----"
          ls -la backend

      - name: Compute short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # ðŸ”§ Normalize IMAGE (strip newline/CR and collapse accidental //)
      - name: Normalize image ref
        id: img
        env:
          RAW_IMAGE: ${{ env.IMAGE_BASE }}
        run: |
          CLEAN=$(printf "%s" "$RAW_IMAGE" | tr -d '\r\n' | sed 's|//*|/|g')
          echo "IMAGE=$CLEAN" >> $GITHUB_OUTPUT
          echo "REF_SHA=${CLEAN}:${{ steps.vars.outputs.SHORT_SHA }}" >> $GITHUB_OUTPUT
          echo "REF_LATEST=${CLEAN}:latest" >> $GITHUB_OUTPUT
          echo "::notice title=Image Base::${CLEAN}"
          # hexdump for debugging hidden chars if any remain
          printf "%s" "$CLEAN" | od -An -t x1

      - name: Build image (classic docker)
        run: |
          docker build \
            -f backend/Dockerfile \
            -t "${{ steps.img.outputs.REF_SHA }}" \
            backend
          docker tag "${{ steps.img.outputs.REF_SHA }}" "${{ steps.img.outputs.REF_LATEST }}"

      - name: Push image
        run: |
          docker push "${{ steps.img.outputs.REF_SHA }}"
          docker push "${{ steps.img.outputs.REF_LATEST }}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE" \
            --image="${{ steps.img.outputs.REF_SHA }}" \
            --region="$REGION" \
            --platform=managed \
            --port=8080 \
            --quiet
